import org.apache.tools.ant.filters.ReplaceTokens

plugins{
	id( 'base' )
	id( 'java' )
}

project.description = "Sample project for Gradle"

repositories {
	mavenCentral()
}
dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

tasks.withType(Test).configureEach {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ['sources/java']
		}
		resources{
			srcDirs = ['sources/resources']
		}
	}
	test{
		java{
			srcDirs = ['tests/java']
		}
		resources{
			srcDirs = ['tests/resources']
		}
	}
}

tasks.named('jar', Jar){
	description = 'Create a jar file for the sample project'
	archiveFileName.set('rideStatusService.jar')
	manifest {
		attributes('Main-Class': 'com.gmail.user0abc.park.RideStatusService')
	}
}

tasks.named('compileJava'){}

tasks.register('generateDescriptions', Copy){
	group = 'park'
	description = 'Generate descriptions from templates'
	inputs.dir 'templates'
	from 'templates'
	into layout.buildDirectory.dir("templates")
	filter(ReplaceTokens, tokens: [THEME_PARK_NAME: "Yellow Grim World"])
	doLast {
		println "generateDescriptions"
	}
}

tasks.register('zipDescriptions', Zip){
	group = 'park'
	description = 'Zip compiled descriptions into an archive'
	from generateDescriptions
	archiveFileName = "parkDescriptions.zip"
	destinationDirectory = layout.buildDirectory.dir("packed")
	doLast {
		println "zipDescriptions"
	}
}

tasks.named('build'){
	dependsOn zipDescriptions, jar
}
